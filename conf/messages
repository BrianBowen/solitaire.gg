# Common
guest.name = Guest
invalid.game.rules = We can''t find any information about the game [{0}].

# Authentication
authentication.call.to.action = Sign in to {0}
authentication.sign.in = Sign In
authentication.invalid.provider = Cannot authenticate with unknown social provider [{0}].
authentication.service.error = Couldn''t authenticate with provider [{0}].

# Index Page
index.play.now = Play Solitaire

index.games.popular = Popular Games
index.games.completed= All Games
index.games.unstarted = Unstarted Games

# Menus
menu.title = Menu
menu.game.options = Game Options
menu.card.options = Card Options
menu.help = Help
menu.feedback = Feedback
menu.redos = No redos available
menu.hint = Click for a hint
menu.undos = No undos available
menu.redeal = Redeal
menu.redeal.description = Redeal the current game, with a fresh shuffle.
menu.specific.seed = Specific Seed
menu.specific.seed.description = Play a specific shuffle and deal. This lets you "start over" with the same cards.
menu.winnable.game = Winnable Game
menu.winnable.game.description = Play a particular shuffle and deal of this game that has been beaten before.
menu.different.game = Different Game
menu.different.game.description = Choose from hundreds types of solitaire.
menu.give.up = Give Up
menu.give.up.description = Resign in defeat, and view your progress.

# Gameplay
game.loading = Loading...
options.cards.back = Card Back
options.cards.layout = Card Layout
options.cards.face.cards = Face Cards
options.cards.ranks = Ranks
options.cards.suits = Suits

options.auto.flip = Auto Flip
options.audio = Audio
options.gamepad = Gamepad
options.background.color = Background Color

# Feedback
feedback.prompt = Feedback is always appreciated. Thanks for sharing yours.
feedback.submit = Submit Feedback
feedback.cancel = Cancel

# Profile
profile.set.username = Set username
profile.create.account = Create a local account
profile.sign.out = Sign Out
profile.use.image.as.avatar = Use your {0} profile image as your avatar
profile.connect.account = Connect your {0} account

# Email
email.from = Solitaire.gg <solitaire@solitaire.gg>
email.welcome.subject = Welcome to {0}!
email.welcome.body.html = <em>Welcome to <strong>Solitaire.gg</strong>!</em><br>We're so glad you're here.
email.welcome.body.text = Welcome to Solitaire.gg! We're so glad you're here.

# Help
help.title = {0} Help
help.about = This is {0}.
help.general = Help for {0}.
help.play.now = Play Now
help.also.known.as = Also Known As
help.objective = Objective
help.deck = Deck
help.layout = Layout
help.original.game = Original Game
help.related.games = Related Games
help.web.resources = Web Resources

# Rank Match Rule Help
help.rank.match.rule.none = none
help.rank.match.rule.up = one rank higher
help.rank.match.rule.down = one rank lower
help.rank.match.rule.equal = the same rank
help.rank.match.rule.up.or.down = one rank lower or higher
help.rank.match.rule.up.by.2 = two ranks higher
help.rank.match.rule.down.by.2 = two ranks lower
help.rank.match.rule.up.by.3 = three ranks higher
help.rank.match.rule.down.by.3 = three ranks lower
help.rank.match.rule.up.by.4 = four ranks higher
help.rank.match.rule.down.by.4 = four ranks lower
help.rank.match.rule.up.by.pile.index = one rank higher for the first pile, two higher for the second, and so on,
help.rank.match.rule.any = any rank

# Suit Match Rule Help
help.suit.match.rule.none = none
help.suit.match.rule.same.suit = the same suit
help.suit.match.rule.different.suit = a different suit
help.suit.match.rule.same.color = the same color
help.suit.match.rule.alternating.color = a different color
help.suit.match.rule.any = any suit

# Fill Empty From Help
help.fill.empty.with.any = An empty pile may be filled with any card.
help.fill.empty.with.none = An empty pile may not be filled.
help.fill.empty.with.rank = An empty pile may be filled with any {0}.
help.fill.empty.with.rank.until.stock.empty = An empty pile may be filled with any {0} until the stock is empty.
help.fill.empty.with.high.rank.or.low.rank = An empty pile may be filled with any {0} or {1}.
help.fill.empty.with.sevens = An empty pile may be filled with any Seven.

# Objective Help
help.victory.condition.all.but.four.on.foundation = Place all but four cards on the foundation.
help.victory.condition.all.on.foundation = Place all cards on the foundation in sequence.
help.victory.condition.all.on.foundation.or.stock = Place all cards on the foundation or stock.
help.victory.condition.all.on.tableau.sorted = Sort all cards on the tableau so that each is {0} and {1}, or move them to the foundation.
help.victory.condition.none.in.pyramid = Remove all cards from the pyramid.
help.victory.condition.none.in.stock = Remove all cards from the stock and waste.
help.victory.condition.pairs.sr = Remove all pairs with equal ranks.
help.victory.condition.pairs.srsc = Remove all pairs with equal ranks and the same color.
help.victory.condition.pairs.ss = Remove all pairs with the same suit.
help.victory.condition.pairs.9-or-10jqk = Remove all pairs adding to nine and all Nines, Tens, Jacks, Queens, and Kings.
help.victory.condition.pairs.10-or-10JQK-pairs = Remove all pairs adding to ten, pairs of Jacks, pairs of Queens, and pairs of Kings.
help.victory.condition.pairs.10-or-10JQK = Remove all pairs adding to ten, and all Tens, Jacks, Queens, and Kings.
help.victory.condition.pairs.10-or-four-10JQK = Remove all pairs adding to ten, and all sets of Ten, Jacks Queen, and King.
help.victory.condition.pairs.11-or-JQK-pairs = Remove all pairs adding to eleven, and all pairs of Jacks, Queens, and Kings.
help.victory.condition.pairs.11-or-Jpair-or-QK = Remove all pairs adding to eleven, all pairs of Jacks, and all Queen/King pairs.
help.victory.condition.pairs.11-or-JQK = Remove all pairs adding to eleven, and all Jacks, Queens, and Kings.
help.victory.condition.pairs.ss-11-or-JQK = Remove all same-suit pairs adding to eleven, and all Jacks, Queens, and Kings.
help.victory.condition.pairs.12-or-QK = Remove all pairs adding to twelve, and all Queens and Kings.
help.victory.condition.pairs.13-or-K = Remove all pairs adding to 13, and all Kings.
help.victory.condition.pairs.14 = Remove all pairs adding to 14.
help.victory.condition.pairs.15-or-10JQK = Remove all pairs adding to 15, and all sets of Ten/Jack/Queen/King.
help.victory.condition.pairs.15-or-A-pair = Remove all pairs adding to 15, and all Ace pairs.
help.victory.condition.pairs.15-or-four-10JQK = Remove sets adding to fifteen, and sets of all four Tens, Jacks, Queens, and Kings.
help.victory.condition.pairs.17-or-A23 = Remove all pairs adding to 17, and all sets of Ace/Two/Three.
help.victory.condition.pairs.face-and-three-that-add-to-18 = Remove all sets of one face card and three others that add to 18.
help.victory.condition.pairs.cr = Remove all pairs with consecutive ranks.
help.victory.condition.pairs.cr-or-AK = Remove all pairs with consecutive ranks or Ace/King.
help.victory.condition.pairs.cr-or-sr = Remove all pairs with consecutive or equal ranks.

# Deck Options Help
help.deck.single.standard = One standard deck of {0} cards.
help.deck.single.oddranks = One deck of {0} cards using ranks {1}.
help.deck.single.oddsuits = One deck of {0} cards using suits {1}.
help.deck.single.oddranksandsuits = One deck of {0} cards using ranks {1} and suits {2}.

help.deck.multiple.standard = {0} standard decks totalling {1} cards.
help.deck.multiple.oddranks = {0} decks totalling {1} cards using ranks {2}.
help.deck.multiple.oddsuits = {0} decks totalling {1} cards using suits {2}.
help.deck.multiple.oddranksandsuits = {0} decks totalling {1} cards using ranks {2} and suits {3}.

# Pile Help
help.piles.single = A single {0} pile.
help.piles.single.cards.empty = A single empty {0} pile.
help.piles.single.cards.single = A single {0} pile with one initial card.
help.piles.single.cards.multiple = A single {0} pile with {1} initial cards.

help.piles.multiple = {0} {1} piles.
help.piles.multiple.cards.empty = {0} empty {1} piles.
help.piles.multiple.cards.single = {0} {1} piles with one initial card dealt to them.
help.piles.multiple.cards.single.each = {0} {1} piles with one initial card dealt to each.
help.piles.multiple.cards.multiple = {0} {1} piles with {2} initial cards dealt to them.
help.piles.multiple.cards.multiple.each = {0} {1} piles with {2} initial cards dealt to each.
help.piles.multiple.cards.pile.index = {0} {1} piles with one card dealt to the first pile, two to the second, and so on.
help.piles.multiple.cards.rest.of.deck = {0} {1} piles with the rest of the cards in the deck dealt to them.
help.piles.multiple.cards.custom = {0} {1} piles with a custom number of cards dealt to them.

# Stock Help
help.stock.cards.shown = {0} cards are visible.

help.stock.cards.dealt.single = one card
help.stock.cards.dealt.multiple = {0} cards
help.stock.cards.dealt.fewer.each.time = three cards, then fewer each time,

help.stock.deal.to.foundation = When selected, deals {0} to each foundation pile.
help.stock.deal.to.manually = Manually move cards from the stock.
help.stock.deal.to.never = No cards may be moved.
help.stock.deal.to.reserve = When selected, deals {0} to each reserve pile.
help.stock.deal.to.tableau = When selected, deals {0} to each tableau pile.
help.stock.deal.to.tableau.first.set = When selected, deals {0} to each tableau pile in the first set.
help.stock.deal.to.tableau.if.none.empty = When selected, deals {0} to each tableau pile if none are empty.
help.stock.deal.to.tableau.empty = When selected, deals {0} to each empty tableau pile.
help.stock.deal.to.tableau.non.empty = When selected, deals {0} to each non-empty tableau pile.
help.stock.deal.to.waste = When selected, deals {0} to the waste.
help.stock.deal.to.waste.or.pair.manually = When selected, deals {0} to the waste, or pair manually.

help.stock.max.deals.single = Only a single pass through the stock is allowed.
help.stock.max.deals.multiple = Up to {0} passes through the stock.
help.stock.max.deals.unlimited = The stock has unlimited redeals.

# Waste Help
help.waste.playable.cards.all = Any card may be moved from the {0}.
help.waste.playable.cards.top = The top card may be moved from the {0}.

# Foundation Help
help.foundation.lowrank.any = Any card may be moved to any empty {0} pile.
help.foundation.lowrank.ascending = An Ace may be played the first {0} pile, a Two on the second, and so on.
help.foundation.lowrank.first.becomes.base = The first card played to a {0} becomes the base card for others.
help.foundation.lowrank.specific = Any {1} may be played to any empty {0} pile.

help.foundation.initial.restriction.specific.color.unique.suits = Each pile must be started with a {0} card and be a unique suit.
help.foundation.initial.restriction.specific.suit = Each pile must be started with a {0} card.
help.foundation.initial.restriction.unique.colors = Each pile must be started with a unique color.
help.foundation.initial.restriction.unique.suits = Each pile must be started with a unique suit.

help.foundation.build.none = No cards may be built on a card in a {0} pile.
help.foundation.build.rank.and.suit.match.rules = A card may be built on a card in a {0} pile if it is {1} and {2}.

help.foundation.wrap.ranks = An {0} may be played on a {1}, continuing the sequence.
help.foundation.cards.shown = {0} cards are visible.

help.foundation.move.complete.sequences.only = Complete sorted sequences of cards may be moved an empty {0} pile.

# Tableau Help
help.tableau.unique.ranks = The piles are dealt in such a way that no two cards in the same pile have the same rank.

help.tableau.cards.face.down.all.but.one = The top card of each pile is turned face-up.
help.tableau.cards.face.down.none = All cards are face-up.
help.tableau.cards.face.down.single = All but the first card in each pile is turned face-up.
help.tableau.cards.face.down.multiple = All but the first {0} cards in each pile are turned face-up.
help.tableau.cards.face.down.even.numbered = Each odd numbered card is turned face-up.
help.tableau.cards.face.down.odd.numbered = Each even numbered card is turned face-up.

help.tableau.build.none = No cards may be built on a card in a {0} pile.
help.tableau.build.rank.and.suit.match.rules = A card may be built on a card in a {0} pile if it is {1} and {2}.

help.tableau.move.stacks.none = No cards may be moved from {0} piles.
help.tableau.move.stacks.rank.and.suit.match.rules = Stacks of cards may be moved from a {0} pile if they are each {1} and {2}.

# Pyramid Help
help.pyramid.rows.single = a single row
help.pyramid.rows.multiple = {0} rows

help.pyramid.type.standard = A standard {0} with {1} (the top row has only one card, two in the next, and so on).
help.pyramid.type.inverted = An inverted {0} with {1} (the bottom row has only one card, two in the next, and so on).

help.pyramid.wrap.ranks = An Ace may be played on a King, continuing the sequence.

help.pyramid.build.none = No cards may be built on this {0}.
help.pyramid.build.rank.and.suit.match.rules = A card may be built on this {0} if it is {1} and {2}.

help.pyramid.move.stacks.none = No cards may be moved from this {0}.
help.pyramid.move.stacks.rank.and.suit.match.rules = Cards may be moved from this {0} if they are {1} and {2}.
