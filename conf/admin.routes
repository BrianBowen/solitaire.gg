GET         /                                controllers.admin.AdminController.index()
GET         /unfinished                      controllers.admin.AdminController.unfinished()

GET         /sandbox                         controllers.admin.SandboxController.defaultSandbox()
GET         /sandbox/:key                    controllers.admin.SandboxController.sandbox(key)

GET         /wipe                            controllers.admin.AdminController.wipeSchema(key)


GET         /test                            controllers.admin.TestController.tests
GET         /test/:test                      controllers.admin.TestController.runTest(test)

GET         /rules                           controllers.admin.RulesController.rulesList(q ?= "", sortBy ?= "title")
GET         /rules/data                      controllers.admin.RulesController.rulesData
GET         /rules/:id                       controllers.admin.RulesController.rulesDetail(id: String)
GET         /rules/:id/screenshot            controllers.admin.RulesController.rulesScreenshot(id: String)

GET         /export/status                   controllers.admin.AnalyticsExportController.exportStatus()
GET         /export/cache                    controllers.admin.AnalyticsExportController.cacheMissingFiles()
GET         /export/:d/cache                 controllers.admin.AnalyticsExportController.cacheFiles(d: org.joda.time.LocalDate)
GET         /export/:d/download/:name        controllers.admin.AnalyticsExportController.downloadFile(d: org.joda.time.LocalDate, name: String)
GET         /export/remove                   controllers.admin.AnalyticsExportController.removeAllFiles()
GET         /export/:d/remove                controllers.admin.AnalyticsExportController.removeFiles(d: org.joda.time.LocalDate)
GET         /export/:d/wipe                  controllers.admin.AnalyticsExportController.wipeDatabase(d: org.joda.time.LocalDate)

GET         /analytics/list                  controllers.admin.AnalyticsEventController.eventList(q ?= "", sortBy ?= "created", page: Int ?= 0)
GET         /analytics/:id                   controllers.admin.AnalyticsEventController.eventDetail(id: java.util.UUID)
GET         /analytics/:id/remove            controllers.admin.AnalyticsEventController.removeEvent(id: java.util.UUID)

GET         /requests                        controllers.admin.RequestLogController.requestList(q ?= "", sortBy ?= "started", page: Int ?= 0)

GET         /feedback/:key                   controllers.admin.FeedbackController.list(key, q ?= "", sortBy ?= "occurred", page: Int ?= 0)
GET         /feedback/:id/note               controllers.admin.FeedbackController.feedbackNoteForm(id: java.util.UUID)
POST        /feedback/:id/note               controllers.admin.FeedbackController.feedbackNotePost(id: java.util.UUID)
GET         /feedback/:id/remove             controllers.admin.FeedbackController.removeFeedback(id: java.util.UUID)

GET         /logs                            controllers.admin.LogController.list()
GET         /logs/:name                      controllers.admin.LogController.view(name)

GET         /archive/list                    controllers.admin.DataArchiveController.list()
GET         /archive/process                 controllers.admin.DataArchiveController.process()

GET         /report/trend                    controllers.admin.ReportController.trend()
GET         /report/requests                 controllers.admin.ReportController.requests()
GET         /report/analytics                controllers.admin.ReportController.analytics()
GET         /report/email                    controllers.admin.ReportController.email(d: org.joda.time.LocalDate ?= utils.DateUtils.today)
GET         /report/ad-hoc                   controllers.admin.AdHocQueryController.queryList(query: Option[java.util.UUID] ?= None, action: Option[String] ?= None)
POST        /report/ad-hoc/run               controllers.admin.AdHocQueryController.run()
